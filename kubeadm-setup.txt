Unique hostname, MAC address, and product_uuid for every node
  ip link
  sudo cat /sys/class/dmi/id/product_uuid

Check required ports
  nc 127.0.0.1 6443

Swap configuration - likely Azure VM disable swap by default
  sudo swapoff -a
  sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

Installing kubeadm, kubelet and kubectl
  sudo apt-get update
  # apt-transport-https may be a dummy package; if so, you can skip that package
  # AzVM: ca-certificates curl -> installed
  sudo apt-get install -y apt-transport-https ca-certificates curl 

  # Download the public signing key for the Kubernetes package repositories
  # Note: In releases older than Debian 12 and Ubuntu 22.04, /etc/apt/keyrings does not exist by default; you can create it by running sudo mkdir -m 755 /etc/apt/keyrings
  
  curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg 
  # curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -v -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg 

  # This overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list
  echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
  
  sudo apt-get update
  sudo apt-get install -y kubelet kubeadm kubectl containerd  
  sudo apt-mark hold kubelet kubeadm kubectl

# Versions. Add echo with \n
  kubectl version --client && \ 
  kubeadm version && \
  kubelet --version && \
  containerd --version

# Read Configuring a cgroup driver - no in BB
# https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/configure-cgroup-driver/


# From here: https://kubernetes.io/docs/setup/production-environment/container-runtimes/
# https://www.nocentino.com/posts/2021-12-27-installing-and-configuring-containerd-as-a-kubernetes-container-runtime/
# setup CRI

cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
overlay                                                    
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter

# sysctl params.
cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF

# Apply sysctl params
sudo sysctl --system

# Check verification from k8s doc site


sudo mkdir -p /etc/containerd
containerd config default | sudo tee /etc/containerd/config.toml

sudo systemctl restart containerd

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay                                                    
br_netfilter
EOF

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sudo sysctl --system